# syntax=docker/dockerfile:1

# Base image with required build tools and system libraries
FROM oven/bun:1.2.21-debian AS base

ENV PNPM_HOME=/root/.local/share/pnpm \
  NODE_ENV=production

WORKDIR /app

# Install system dependencies for native modules (better-sqlite3, sqlite3, canvas)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      python3 make g++ pkg-config \
      libsqlite3-dev \
      libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev && \
    rm -rf /var/lib/apt/lists/*

# Install dependencies only (leverage Docker layer cache)
FROM base AS deps
# Copy package manifest first. bun.lockb is optional during build; if you want deterministic installs
# add a separate COPY step or include bun.lockb in the build context.
COPY package.json ./
RUN bun install

# Development image
FROM deps AS dev
ENV NODE_ENV=development
COPY . .
EXPOSE 3000
CMD ["bun", "run", "dev"]

# Production build
FROM deps AS build
ENV NODE_ENV=production
COPY . .
RUN bun run build

# Production runner (Next.js standalone not configured; run with next start)
FROM base AS runner
ENV NODE_ENV=production

WORKDIR /app

# Install only production dependencies using Bun
# bun.lockb optional; include it in build context to pin versions
COPY package.json ./
RUN bun install --production

# Copy built app
COPY --from=build /app/.next ./.next
COPY --from=build /app/public ./public
COPY --from=build /app/package.json ./package.json

EXPOSE 3000
CMD ["bun", "run", "start"]
