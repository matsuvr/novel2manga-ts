version: '3.8'

services:
  novel2manga:
    build: .
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - LANG=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      # データベース設定（必要に応じて環境変数ファイルから読み込み）
      - DATABASE_URL=${DATABASE_URL}
      # Cloudflare設定
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
    volumes:
      # ストレージ用のボリュームマウント
      - novel_storage:/app/storage
      - novel_data:/app/data
      # ログ出力用
      - ./logs:/app/logs
    depends_on:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-novel2manga}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # 初期化スクリプト（必要に応じて）
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-novel2manga}']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  novel_storage:
    driver: local
  novel_data:
    driver: local

networks:
  default:
    name: novel2manga-network
